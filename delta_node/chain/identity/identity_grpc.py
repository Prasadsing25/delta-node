# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: identity.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from ..transaction import transaction_pb2
from . import identity_pb2


class IdentityBase(abc.ABC):

    @abc.abstractmethod
    async def Join(self, stream: 'grpclib.server.Stream[identity_pb2.JoinReq, identity_pb2.JoinResp]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateUrl(self, stream: 'grpclib.server.Stream[identity_pb2.UpdateUrlReq, transaction_pb2.Transaction]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateName(self, stream: 'grpclib.server.Stream[identity_pb2.UpdateNameReq, transaction_pb2.Transaction]') -> None:
        pass

    @abc.abstractmethod
    async def Leave(self, stream: 'grpclib.server.Stream[identity_pb2.LeaveReq, transaction_pb2.Transaction]') -> None:
        pass

    @abc.abstractmethod
    async def GetNodeInfo(self, stream: 'grpclib.server.Stream[identity_pb2.NodeInfoReq, identity_pb2.NodeInfo]') -> None:
        pass

    @abc.abstractmethod
    async def GetNodes(self, stream: 'grpclib.server.Stream[identity_pb2.NodeInfosReq, identity_pb2.NodeInfos]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/identity.Identity/Join': grpclib.const.Handler(
                self.Join,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.JoinReq,
                identity_pb2.JoinResp,
            ),
            '/identity.Identity/UpdateUrl': grpclib.const.Handler(
                self.UpdateUrl,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.UpdateUrlReq,
                transaction_pb2.Transaction,
            ),
            '/identity.Identity/UpdateName': grpclib.const.Handler(
                self.UpdateName,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.UpdateNameReq,
                transaction_pb2.Transaction,
            ),
            '/identity.Identity/Leave': grpclib.const.Handler(
                self.Leave,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.LeaveReq,
                transaction_pb2.Transaction,
            ),
            '/identity.Identity/GetNodeInfo': grpclib.const.Handler(
                self.GetNodeInfo,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.NodeInfoReq,
                identity_pb2.NodeInfo,
            ),
            '/identity.Identity/GetNodes': grpclib.const.Handler(
                self.GetNodes,
                grpclib.const.Cardinality.UNARY_UNARY,
                identity_pb2.NodeInfosReq,
                identity_pb2.NodeInfos,
            ),
        }


class IdentityStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Join = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/Join',
            identity_pb2.JoinReq,
            identity_pb2.JoinResp,
        )
        self.UpdateUrl = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/UpdateUrl',
            identity_pb2.UpdateUrlReq,
            transaction_pb2.Transaction,
        )
        self.UpdateName = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/UpdateName',
            identity_pb2.UpdateNameReq,
            transaction_pb2.Transaction,
        )
        self.Leave = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/Leave',
            identity_pb2.LeaveReq,
            transaction_pb2.Transaction,
        )
        self.GetNodeInfo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/GetNodeInfo',
            identity_pb2.NodeInfoReq,
            identity_pb2.NodeInfo,
        )
        self.GetNodes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/identity.Identity/GetNodes',
            identity_pb2.NodeInfosReq,
            identity_pb2.NodeInfos,
        )
