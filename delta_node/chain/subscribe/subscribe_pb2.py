# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: subscribe.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fsubscribe.proto\x12\tsubscribe\"\x8c\x05\n\x05\x45vent\x12\x32\n\x0ctask_created\x18\x01 \x01(\x0b\x32\x1a.subscribe.TaskCreateEventH\x00\x12\x35\n\rround_started\x18\x02 \x01(\x0b\x32\x1c.subscribe.RoundStartedEventH\x00\x12;\n\x10partner_selected\x18\x03 \x01(\x0b\x32\x1f.subscribe.PartnerSelectedEventH\x00\x12\x41\n\x13\x63\x61lculation_started\x18\x04 \x01(\x0b\x32\".subscribe.CalculationStartedEventH\x00\x12\x41\n\x13\x61ggregation_started\x18\x05 \x01(\x0b\x32\".subscribe.AggregationStartedEventH\x00\x12\x31\n\x0bround_ended\x18\x06 \x01(\x0b\x32\x1a.subscribe.RoundEndedEventH\x00\x12\x33\n\rtask_finished\x18\x07 \x01(\x0b\x32\x1a.subscribe.TaskFinishEventH\x00\x12.\n\theartbeat\x18\x08 \x01(\x0b\x32\x19.subscribe.HeartBeatEventH\x00\x12\x42\n\x14task_member_verified\x18\t \x01(\x0b\x32\".subscribe.TaskMemberVerifiedEventH\x00\x12\x35\n\rtask_verified\x18\n \x01(\x0b\x32\x1c.subscribe.TaskVerifiedEventH\x00\x12\x39\n\x0f\x64\x61ta_registered\x18\x0b \x01(\x0b\x32\x1e.subscribe.DataRegisteredEventH\x00\x42\x07\n\x05\x65vent\"\xa2\x01\n\x0fTaskCreateEvent\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0f\n\x07task_id\x18\x02 \x01(\t\x12\x0f\n\x07\x64\x61taset\x18\x03 \x01(\t\x12\x0b\n\x03url\x18\x04 \x01(\t\x12\x12\n\ncommitment\x18\x05 \x01(\t\x12\x11\n\ttask_type\x18\x06 \x01(\t\x12\x15\n\renable_verify\x18\x07 \x01(\x08\x12\x11\n\ttolerance\x18\x08 \x01(\x05\"3\n\x11RoundStartedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\r\n\x05round\x18\x02 \x01(\x05\"E\n\x14PartnerSelectedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\r\n\x05round\x18\x02 \x01(\x05\x12\r\n\x05\x61\x64\x64rs\x18\x03 \x03(\t\"H\n\x17\x43\x61lculationStartedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\r\n\x05round\x18\x02 \x01(\x05\x12\r\n\x05\x61\x64\x64rs\x18\x03 \x03(\t\"H\n\x17\x41ggregationStartedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\r\n\x05round\x18\x02 \x01(\x05\x12\r\n\x05\x61\x64\x64rs\x18\x03 \x03(\t\"1\n\x0fRoundEndedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\r\n\x05round\x18\x02 \x01(\x05\"\"\n\x0fTaskFinishEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"\x10\n\x0eHeartBeatEvent\"M\n\x17TaskMemberVerifiedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\x12\x10\n\x08verified\x18\x03 \x01(\x08\"6\n\x11TaskVerifiedEvent\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x10\n\x08verified\x18\x02 \x01(\x08\"U\n\x13\x44\x61taRegisteredEvent\x12\r\n\x05owner\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\x12\n\ncommitment\x18\x04 \x01(\t\",\n\x08\x45ventReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0f\n\x07timeout\x18\x02 \x01(\x05\x32\x43\n\tSubscribe\x12\x36\n\tSubscribe\x12\x13.subscribe.EventReq\x1a\x10.subscribe.Event\"\x00\x30\x01\x62\x06proto3')



_EVENT = DESCRIPTOR.message_types_by_name['Event']
_TASKCREATEEVENT = DESCRIPTOR.message_types_by_name['TaskCreateEvent']
_ROUNDSTARTEDEVENT = DESCRIPTOR.message_types_by_name['RoundStartedEvent']
_PARTNERSELECTEDEVENT = DESCRIPTOR.message_types_by_name['PartnerSelectedEvent']
_CALCULATIONSTARTEDEVENT = DESCRIPTOR.message_types_by_name['CalculationStartedEvent']
_AGGREGATIONSTARTEDEVENT = DESCRIPTOR.message_types_by_name['AggregationStartedEvent']
_ROUNDENDEDEVENT = DESCRIPTOR.message_types_by_name['RoundEndedEvent']
_TASKFINISHEVENT = DESCRIPTOR.message_types_by_name['TaskFinishEvent']
_HEARTBEATEVENT = DESCRIPTOR.message_types_by_name['HeartBeatEvent']
_TASKMEMBERVERIFIEDEVENT = DESCRIPTOR.message_types_by_name['TaskMemberVerifiedEvent']
_TASKVERIFIEDEVENT = DESCRIPTOR.message_types_by_name['TaskVerifiedEvent']
_DATAREGISTEREDEVENT = DESCRIPTOR.message_types_by_name['DataRegisteredEvent']
_EVENTREQ = DESCRIPTOR.message_types_by_name['EventReq']
Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.Event)
  })
_sym_db.RegisterMessage(Event)

TaskCreateEvent = _reflection.GeneratedProtocolMessageType('TaskCreateEvent', (_message.Message,), {
  'DESCRIPTOR' : _TASKCREATEEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.TaskCreateEvent)
  })
_sym_db.RegisterMessage(TaskCreateEvent)

RoundStartedEvent = _reflection.GeneratedProtocolMessageType('RoundStartedEvent', (_message.Message,), {
  'DESCRIPTOR' : _ROUNDSTARTEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.RoundStartedEvent)
  })
_sym_db.RegisterMessage(RoundStartedEvent)

PartnerSelectedEvent = _reflection.GeneratedProtocolMessageType('PartnerSelectedEvent', (_message.Message,), {
  'DESCRIPTOR' : _PARTNERSELECTEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.PartnerSelectedEvent)
  })
_sym_db.RegisterMessage(PartnerSelectedEvent)

CalculationStartedEvent = _reflection.GeneratedProtocolMessageType('CalculationStartedEvent', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATIONSTARTEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.CalculationStartedEvent)
  })
_sym_db.RegisterMessage(CalculationStartedEvent)

AggregationStartedEvent = _reflection.GeneratedProtocolMessageType('AggregationStartedEvent', (_message.Message,), {
  'DESCRIPTOR' : _AGGREGATIONSTARTEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.AggregationStartedEvent)
  })
_sym_db.RegisterMessage(AggregationStartedEvent)

RoundEndedEvent = _reflection.GeneratedProtocolMessageType('RoundEndedEvent', (_message.Message,), {
  'DESCRIPTOR' : _ROUNDENDEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.RoundEndedEvent)
  })
_sym_db.RegisterMessage(RoundEndedEvent)

TaskFinishEvent = _reflection.GeneratedProtocolMessageType('TaskFinishEvent', (_message.Message,), {
  'DESCRIPTOR' : _TASKFINISHEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.TaskFinishEvent)
  })
_sym_db.RegisterMessage(TaskFinishEvent)

HeartBeatEvent = _reflection.GeneratedProtocolMessageType('HeartBeatEvent', (_message.Message,), {
  'DESCRIPTOR' : _HEARTBEATEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.HeartBeatEvent)
  })
_sym_db.RegisterMessage(HeartBeatEvent)

TaskMemberVerifiedEvent = _reflection.GeneratedProtocolMessageType('TaskMemberVerifiedEvent', (_message.Message,), {
  'DESCRIPTOR' : _TASKMEMBERVERIFIEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.TaskMemberVerifiedEvent)
  })
_sym_db.RegisterMessage(TaskMemberVerifiedEvent)

TaskVerifiedEvent = _reflection.GeneratedProtocolMessageType('TaskVerifiedEvent', (_message.Message,), {
  'DESCRIPTOR' : _TASKVERIFIEDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.TaskVerifiedEvent)
  })
_sym_db.RegisterMessage(TaskVerifiedEvent)

DataRegisteredEvent = _reflection.GeneratedProtocolMessageType('DataRegisteredEvent', (_message.Message,), {
  'DESCRIPTOR' : _DATAREGISTEREDEVENT,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.DataRegisteredEvent)
  })
_sym_db.RegisterMessage(DataRegisteredEvent)

EventReq = _reflection.GeneratedProtocolMessageType('EventReq', (_message.Message,), {
  'DESCRIPTOR' : _EVENTREQ,
  '__module__' : 'subscribe_pb2'
  # @@protoc_insertion_point(class_scope:subscribe.EventReq)
  })
_sym_db.RegisterMessage(EventReq)

_SUBSCRIBE = DESCRIPTOR.services_by_name['Subscribe']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EVENT._serialized_start=31
  _EVENT._serialized_end=683
  _TASKCREATEEVENT._serialized_start=686
  _TASKCREATEEVENT._serialized_end=848
  _ROUNDSTARTEDEVENT._serialized_start=850
  _ROUNDSTARTEDEVENT._serialized_end=901
  _PARTNERSELECTEDEVENT._serialized_start=903
  _PARTNERSELECTEDEVENT._serialized_end=972
  _CALCULATIONSTARTEDEVENT._serialized_start=974
  _CALCULATIONSTARTEDEVENT._serialized_end=1046
  _AGGREGATIONSTARTEDEVENT._serialized_start=1048
  _AGGREGATIONSTARTEDEVENT._serialized_end=1120
  _ROUNDENDEDEVENT._serialized_start=1122
  _ROUNDENDEDEVENT._serialized_end=1171
  _TASKFINISHEVENT._serialized_start=1173
  _TASKFINISHEVENT._serialized_end=1207
  _HEARTBEATEVENT._serialized_start=1209
  _HEARTBEATEVENT._serialized_end=1225
  _TASKMEMBERVERIFIEDEVENT._serialized_start=1227
  _TASKMEMBERVERIFIEDEVENT._serialized_end=1304
  _TASKVERIFIEDEVENT._serialized_start=1306
  _TASKVERIFIEDEVENT._serialized_end=1360
  _DATAREGISTEREDEVENT._serialized_start=1362
  _DATAREGISTEREDEVENT._serialized_end=1447
  _EVENTREQ._serialized_start=1449
  _EVENTREQ._serialized_end=1493
  _SUBSCRIBE._serialized_start=1495
  _SUBSCRIBE._serialized_end=1562
# @@protoc_insertion_point(module_scope)
