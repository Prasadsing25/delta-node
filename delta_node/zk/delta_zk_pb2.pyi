"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Input(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WEIGHTS_FIELD_NUMBER: builtins.int
    XY_FIELD_NUMBER: builtins.int
    @property
    def weights(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def xy(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Sample]: ...
    def __init__(self,
        *,
        weights: typing.Optional[typing.Iterable[builtins.float]] = ...,
        xy: typing.Optional[typing.Iterable[global___Sample]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["weights",b"weights","xy",b"xy"]) -> None: ...
global___Input = Input

class Sample(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    D_FIELD_NUMBER: builtins.int
    @property
    def d(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        d: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["d",b"d"]) -> None: ...
global___Sample = Sample

class Proof(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INDEX_FIELD_NUMBER: builtins.int
    PUBLICSIGNALS_FIELD_NUMBER: builtins.int
    PROOF_FIELD_NUMBER: builtins.int
    CALLDATA_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    index: builtins.int
    @property
    def publicSignals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    proof: typing.Text
    calldata: typing.Text
    error: typing.Text
    def __init__(self,
        *,
        index: builtins.int = ...,
        publicSignals: typing.Optional[typing.Iterable[typing.Text]] = ...,
        proof: typing.Text = ...,
        calldata: typing.Text = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["calldata",b"calldata","error",b"error","index",b"index","proof",b"proof","publicSignals",b"publicSignals"]) -> None: ...
global___Proof = Proof
